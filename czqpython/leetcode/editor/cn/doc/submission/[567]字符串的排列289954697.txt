class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        need, window = {}, {}
        for ch in s1:
            need[ch] = need.get(ch, 0) + 1
        valid = 0
        left = right = 0
        while right < len(s2):
            c = s2[right]
            right += 1

            if c in need:
                window[c] = window.get(c, 0) + 1
                if window[c] == need[c]:
                    valid += 1
            while right - left >= len(s1) and valid == len(need):
                if right - left == len(s1):
                    return True
                
                d = s2[left]
                left += 1
                if d in need:
                    if window[d] == need[d]:
                        valid -= 1
                    window[d] -= 1
        return False

# runtime:80 ms
# memory:15.1 MB
